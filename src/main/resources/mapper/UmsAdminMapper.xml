<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.guanWang.mapper.UmsAdminMapper">
  <resultMap id="BaseResultMap" type="com.example.guanWang.model.UmsAdmin">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="dep_id" jdbcType="BIGINT" property="depId" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username,sex, password, icon, email,address, phone_number,nick_name, note, create_time, login_time, status,dep_id,duty
  </sql>



  <select id="getUserNameById" parameterType="java.lang.Long" resultType="java.lang.String">
    select nick_name
    from ums_admin
    where
    id=#{id,jdbcType=BIGINT}
  </select>

  <select id="getAllUserName" resultType="com.example.guanWang.model.UserNameAndId">
    select id,nick_name
    from ums_admin
  </select>

  <select id="getAllUserPhone" resultType="java.lang.String">
    select phone_number
    from ums_admin
  </select>

  <select id="details" parameterType="java.lang.Long" resultType="com.example.guanWang.model.DepUser">
    select nick_name,phone_number,address,duty
    from ums_admin
    where dep_id= #{depId,jdbcType=BIGINT}
  </select>


  <select id="getUserByPhone" parameterType="java.lang.String" resultType="java.lang.Long">
    select  id
    from ums_admin
    where phone_number= #{leadPhone,jdbcType=VARCHAR}
  </select>

  <insert id="saveBatch" parameterType="java.util.List">
    insert into ums_admin (id,username,password,icon,email,address,phone_number,nick_name,note,create_time,login_time,status,dep_id)
    values
    <foreach collection="list" item="userItem" index="index" separator=",">
      (#{userItem.id}, #{userItem.username},
      #{userItem.password},
      #{userItem.icon},
      #{userItem.email}, #{userItem.address},
      #{userItem.phoneNumber}, #{userItem.nickName},
      #{userItem.note},
      #{userItem.createTime,jdbcType=TIMESTAMP},
       #{userItem.loginTime,jdbcType=TIMESTAMP},
       #{userItem.status},
      #{userItem.depId})
    </foreach>
  </insert>

  <select id="selectByExample" parameterType="com.example.guanWang.model.UmsAdminExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ums_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByQuery" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ums_admin
    <where>
    <if test="depId != null  and depId != ''">
      dep_id= #{depId,jdbcType=BIGINT}
    </if>
      <if test="keyword != null  and keyword != ''" >
       and username like concat('%', #{keyword}, '%')
        or nick_name like concat('%', #{keyword}, '%')
      </if>
    </where>

  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
   	c1.id,
	c1.username,
	c1.sex,
	c1.PASSWORD,
	c1.icon,
	c1.email,
	c1.address,
	c1.phone_number,
	c1.nick_name,
	c1.note,
	c1.create_time,
	c1.login_time,
	c1.STATUS,
	c1.dep_id ,
	c2.dep_name
    from ums_admin c1
    LEFT JOIN
	dep  c2 on c1.dep_id=c2.id
    where c1.id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ums_admin
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <delete id="deleteBatch" parameterType="java.lang.Long">
    delete from ums_admin
    where
    id in
    <foreach collection="idList" item="id" separator="," open="(" close=")">
    #{id}
  </foreach>
  </delete>

  <delete id="deleteByExample" parameterType="com.example.guanWang.model.UmsAdminExample">
    delete from ums_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.guanWang.model.UmsAdmin">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ums_admin (username,sex, password, icon,
      email, nick_name, note, 
      create_time, login_time, status,address,phone_number,dep_id,duty
      )
    values (#{username,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{loginTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER},
     #{address,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{depId,jdbcType=VARCHAR}, #{duty,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.guanWang.model.UmsAdmin">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ums_admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="depId != null">
        dep_id,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="duty != null">
        duty
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="depId != null">
        #{depId,jdbcType=BIGINT},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="duty != null">
        #{duty,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.guanWang.model.UmsAdminExample" resultType="java.lang.Long">
    select count(*) from ums_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ums_admin
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ums_admin
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.guanWang.model.UmsAdminShow">
    update ums_admin
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="depId != null">
        dep_id=#{depId,jdbcType=VARCHAR},
      </if>
      <if test="duty != null">
        duty=#{duty,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number=#{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address=#{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.guanWang.model.UmsAdmin">
    update ums_admin
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>